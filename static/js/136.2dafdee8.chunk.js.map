{"version":3,"file":"static/js/136.2dafdee8.chunk.js","mappings":"6PACA,EAA6B,gC,SC8B7B,EA1BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACpB,OACE,iCACE,qCACmB,IAAlBA,EAAOC,SAAgB,kDACvBD,EAAOC,OAAS,IACf,eAAIC,UAAWC,EAAf,SACGH,EAAOI,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,2BACE,oCAAYF,MACZ,uBAAIC,KACJ,2CAAmBC,OAHZH,EAMZ,QAKV,E,UCcD,EAhCa,WACX,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBN,GAAW,GAFK,UAIGO,EAAAA,EAAAA,IAAgBJ,EAAS,YAJ5B,OAIVK,EAJU,OAMhBV,EAAcU,EAAKC,SANH,gDAQhBP,EAAS,KAAMQ,SARC,yBAUhBV,GAAW,GAVK,4EAAH,qDAajBM,GACD,GAAE,KAGD,2BACGP,IAAa,SAACY,EAAA,EAAD,IACbV,IAAS,uBAAIA,EAAMW,WACpB,SAACC,EAAD,CAAa1B,OAAQU,MAG1B,C,yICnCKiB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBZ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZc,EAAe,mCAAG,sGACNR,EAASO,IAAI,uBADP,uBACrBb,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfD,EAAe,mCAAG,WAAOf,GAAP,8FAAW+B,EAAX,+BAAqB,GAArB,SACNT,EAASO,IAAT,iBAAuB7B,GAAvB,OAA4B+B,IADtB,uBACrBf,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Reviews/ReviewsList/reviewsList.module.scss?8ec8","modules/Reviews/ReviewsList/ReviewsList.jsx","modules/Reviews/Reviews.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ReviewList\":\"reviewsList_ReviewList__0x2Bi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './reviewsList.module.scss';\n\nconst ReviewList = ({ review }) => {\n  return (\n    <>\n      <h3>Reviews:</h3>\n      {review.length === 0 && <p>There are no reviews..</p>}\n      {review.length > 0 && (\n        <ul className={styles.ReviewList}>\n          {review.map(({ id, author, content, created_at }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n                <p>Creatimg date: {created_at}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nReviewList.propTypes = {\n  review: PropTypes.array.isRequired,\n};\n\nexport default ReviewList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Spinner from '../../shared/components/Spinner/Spinner';\nimport ReviewsList from './ReviewsList/ReviewsList';\nimport { getMovieAddInfo } from '../../shared/services/movie-api';\n\nconst Cast = () => {\n  const [reviewData, setReviewData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getMovieAddInfo(movieId, '/reviews');\n\n        setReviewData(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReview();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      {error && <p>{error.massage}</p>}\n      <ReviewsList review={reviewData} />\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd80261a2a92a1b96bfd0993be732c39d',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getTrendsMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieAddInfo = async (id, addInfo = '') => {\n  const { data } = await instance.get(`/movie/${id}${addInfo}`);\n  return data;\n};\n"],"names":["review","length","className","styles","map","id","author","content","created_at","useState","reviewData","setReviewData","isLoading","setLoading","error","setError","movieId","useParams","useEffect","fetchReview","getMovieAddInfo","data","results","message","Spinner","massage","ReviewsList","instance","axios","baseURL","params","api_key","searchMovies","query","get","getTrendsMovies","addInfo"],"sourceRoot":""}