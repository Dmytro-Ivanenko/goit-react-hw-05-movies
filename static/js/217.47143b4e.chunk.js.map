{"version":3,"file":"static/js/217.47143b4e.chunk.js","mappings":"4PACA,EAA2B,2BAA3B,EAA4D,sB,SCmC5D,EA/BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,iCACE,kCACA,eAAIC,UAAWC,EAAf,gBACGF,QADH,IACGA,OADH,EACGA,EAAMG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjC,OACE,2BACE,gBACEN,UAAS,UAAKC,GACdM,IACmB,OAAjBD,EACI,6FADJ,yCAEsCA,GAExCE,IAAKJ,KAEP,kCAAUA,MACV,uCAAeC,OAXRF,EAcZ,QAIR,E,UCSD,EAhCa,WACX,OAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,GAAW,GAFG,UAIKO,EAAAA,EAAAA,IAAgBJ,EAAS,YAJ9B,OAIRK,EAJQ,OAMdV,EAAYU,EAAKtB,MANH,gDAQdgB,EAAS,KAAMO,SARD,yBAUdT,GAAW,GAVG,4EAAH,qDAafM,GACD,GAAE,KAGD,2BACGP,IAAa,SAACW,EAAA,EAAD,IACbT,IAAS,uBAAIA,EAAMU,WACpB,SAAC,EAAD,CAAUzB,KAAMW,MAGrB,C,yICnCKe,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBV,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZY,EAAe,mCAAG,sGACNR,EAASO,IAAI,uBADP,uBACrBX,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfD,EAAe,mCAAG,WAAOjB,GAAP,8FAAW+B,EAAX,+BAAqB,GAArB,SACNT,EAASO,IAAT,iBAAuB7B,GAAvB,OAA4B+B,IADtB,uBACrBb,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Cast/CastList/castList.module.scss?ade9","modules/Cast/CastList/CastList.jsx","modules/Cast/Cast.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"castList_castList__Nczgk\",\"img\":\"castList_img__Du80H\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './castList.module.scss';\n\nconst CastList = ({ cast }) => {\n  return (\n    <>\n      <h3>Cast</h3>\n      <ul className={styles.castList}>\n        {cast?.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <img\n                className={`${styles.img}`}\n                src={\n                  profile_path === null\n                    ? 'https://icon-library.com/images/no-picture-available-icon/no-picture-available-icon-20.jpg'\n                    : `https://image.tmdb.org/t/p/w500${profile_path}`\n                }\n                alt={name}\n              />\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\nexport default CastList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Spinner from '../../shared/components/Spinner/Spinner';\nimport CastList from './CastList/CastList';\nimport { getMovieAddInfo } from '../../shared/services/movie-api';\n\nconst Cast = () => {\n  const [castData, setCastData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getMovieAddInfo(movieId, '/credits');\n\n        setCastData(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      {error && <p>{error.massage}</p>}\n      <CastList cast={castData} />\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd80261a2a92a1b96bfd0993be732c39d',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getTrendsMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieAddInfo = async (id, addInfo = '') => {\n  const { data } = await instance.get(`/movie/${id}${addInfo}`);\n  return data;\n};\n"],"names":["cast","className","styles","map","id","name","character","profile_path","src","alt","useState","castData","setCastData","isLoading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getMovieAddInfo","data","message","Spinner","massage","instance","axios","baseURL","params","api_key","searchMovies","query","get","getTrendsMovies","addInfo"],"sourceRoot":""}