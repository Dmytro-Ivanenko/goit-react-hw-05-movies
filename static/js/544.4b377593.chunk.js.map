{"version":3,"file":"static/js/544.4b377593.chunk.js","mappings":"yMACA,EAA4B,6BAA5B,EAA2E,mCAA3E,EAAqH,wB,SCyCrH,EArCkB,SAAC,GAA6D,IAA3DA,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,GAAkD,IAA9CC,WAAAA,OAA8C,MAAjC,GAAiC,MAA7BC,SAAAA,OAA6B,MAAlB,YAAkB,EACvEC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAS,UAAKC,GACdC,GAAE,kBAAaP,GACfQ,MAAO,CAAEC,KAAMN,GAHjB,WAKE,gBACEE,UAAWC,EACXI,IACa,OAAXX,EACI,sIADJ,yCAEsCA,GAExCY,IAAKV,KAGP,iBAAKI,UAAU,OAAf,WACE,cAAGA,UAAU,aAAb,SAA2BJ,KAC3B,gBAAKI,UAAU,aAAf,UACE,cAAGA,UAAU,YAAb,SAA0BH,aAMrC,EChCD,EAAyB,0BCMnBU,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,iCACE,6CACA,eAAIR,UAAWC,EAAf,gBACGO,QADH,IACGA,OADH,EACGA,EAAQC,KAAI,YAA+C,IAA5Cd,EAA2C,EAA3CA,GAAIe,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC7C,OACE,SAAC,EAAD,CAEEjB,GAAIA,EACJD,OAAQgB,EACRb,SAAUc,EACVf,WAAYgB,GCAN,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACtB,EAAIuB,GAWvD,OAREvB,IAFFuB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDJDG,GAOV,QAIR,EAMD,GAAeC,EAAAA,EAAAA,MAAKf,E,0HEEpB,UA7Ba,WACX,OAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oGAEbJ,GAAW,GAFE,UAGMK,EAAAA,EAAAA,MAHN,OAGPC,EAHO,OAIbR,EAASQ,EAAKC,SAJD,gDAMbL,EAAS,KAAMM,SANF,yBAQbR,GAAW,GARE,4EAAH,qDAWdI,GACD,GAAE,KAGD,gCACGL,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAIA,EAAMQ,UACnBZ,EAAMa,OAAS,IAAK,SAAC,IAAD,CAAW7B,OAAQgB,MAG7C,C,yIC9BKc,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBX,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZD,EAAe,mCAAG,sGACNM,EAASO,IAAI,uBADP,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfa,EAAe,mCAAG,WAAOnD,GAAP,8FAAWoD,EAAX,+BAAqB,GAArB,SACNT,EAASO,IAAT,iBAAuBlD,GAAvB,OAA4BoD,IADtB,uBACrBd,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/MovieList/MovieItem/movieItem.module.scss?41cf","modules/MovieList/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/modules/MovieList/movieList.module.scss?4b2d","modules/MovieList/MovieList.jsx","../node_modules/nanoid/index.browser.js","pages/Home/Home.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieItem\":\"movieItem_MovieItem__hO7mg\",\"MovieItem_image\":\"movieItem_MovieItem_image__4WncH\",\"link\":\"movieItem_link__5089f\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './movieItem.module.scss';\n\nconst MovieItem = ({ imgURL, id, movieTitle = '', dateYear = 'some year' }) => {\n  const location = useLocation();\n  return (\n    <li className={styles.MovieItem}>\n      <Link\n        className={`${styles.link}`}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img\n          className={styles.MovieItem_image}\n          src={\n            imgURL === null\n              ? 'https://media0.giphy.com/media/MaUARAPy1EfXS4P0H5/giphy.gif?cid=6c09b952llb5gb5odl4tosfmbrad3iiwjny29y5iuhwl5pya&rid=giphy.gif&ct=s'\n              : `https://image.tmdb.org/t/p/w500${imgURL}`\n          }\n          alt={movieTitle}\n        />\n\n        <div className=\"info\">\n          <p className=\"info-title\">{movieTitle}</p>\n          <div className=\"info-other\">\n            <p className=\"info-item\">{dateYear}</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  imgURL: PropTypes.string,\n  movieTitle: PropTypes.string.isRequired,\n  dateYear: PropTypes.string,\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"movieList_movies__AAAF9\"};","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport MovieItem from './MovieItem/MovieItem';\nimport styles from './movieList.module.scss';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <>\n      <h1>Trending movies</h1>\n      <ul className={styles.movies}>\n        {movies?.map(({ id, poster_path, release_date, title }) => {\n          return (\n            <MovieItem\n              key={nanoid()}\n              id={id}\n              imgURL={poster_path}\n              dateYear={release_date}\n              movieTitle={title}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default memo(MovieList);\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React, { useState, useEffect } from 'react';\nimport MovieList from '../../modules/MovieList/MovieList';\nimport Spinner from '../../shared/components/Spinner/Spinner';\nimport { getTrendsMovies } from '../../shared/services/movie-api';\n\nconst Home = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendsMovies();\n        setItems(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovie();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {error && <p>{error.massage}</p>}\n      {items.length > 0 && <MovieList movies={items} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd80261a2a92a1b96bfd0993be732c39d',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getTrendsMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieAddInfo = async (id, addInfo = '') => {\n  const { data } = await instance.get(`/movie/${id}${addInfo}`);\n  return data;\n};\n"],"names":["imgURL","id","movieTitle","dateYear","location","useLocation","className","styles","to","state","from","src","alt","MovieList","movies","map","poster_path","release_date","title","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","memo","useState","items","setItems","isLoading","setLoading","error","setError","useEffect","getMovie","getTrendsMovies","data","results","message","massage","length","instance","axios","baseURL","params","api_key","searchMovies","query","get","getMovieAddInfo","addInfo"],"sourceRoot":""}