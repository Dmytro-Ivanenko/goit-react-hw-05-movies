{"version":3,"file":"static/js/134.9c0d87e6.chunk.js","mappings":"2RACA,EAAiC,qCAAjC,EAAiF,+BAAjF,EAAsH,0BAAtH,EAA0J,8BAA1J,EAA+L,2B,SC6G/L,EA/FqB,WAAO,IAAD,EACzB,GAAgCA,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAW,UAAAJ,EAASK,aAAT,eAAgBC,OAAQ,KAQzCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfb,GAAW,GAFI,UAIIc,EAAAA,EAAAA,IAAgBX,GAJpB,OAITY,EAJS,OAMfjB,EAAYiB,GANG,gDAQfb,EAAS,KAAMc,SARA,yBAUfhB,GAAW,GAVI,4EAAH,qDAahBa,GACD,GAAE,IAGH,IAAQI,EAAuDpB,EAAvDoB,MAAOC,EAAgDrB,EAAhDqB,YAAaC,EAAmCtB,EAAnCsB,SAAUC,EAAyBvB,EAAzBuB,OAAQC,EAAiBxB,EAAjBwB,aAExCC,EAAY,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQG,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAG1D,OACE,iBAAKC,UAAS,UAAKC,GAAnB,UACG5B,IAAa,SAAC6B,EAAA,EAAD,IACb3B,IAAS,uBAAIA,EAAM4B,WAEpB,SAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,WAjCP,WACjBzB,EAASE,EACV,EA+BG,qBAGCZ,IACC,iBAAK6B,UAAS,UAAKC,GAAnB,UACGT,IACC,gBACEQ,UAAS,UAAKC,GACdM,IAAG,yCAAoCf,GACvCgB,IAAKjB,KAIT,4BACE,wBAAKA,KACL,oCAAYI,MAEZ,yCACA,uBAAIF,KAEJ,oCACA,uBAAIG,WAKV,4BACE,8CACA,iBAAKI,UAAS,UAAKC,GAAnB,WACE,SAAC,KAAD,CACED,UAAS,UAAKC,GACdQ,GAAE,OACFzB,MAAO,CAAEC,KAAMF,GAHjB,mBAOA,SAAC,KAAD,CACEiB,UAAS,UAAKC,GACdQ,GAAE,UACFzB,MAAO,CAAEC,KAAMF,GAHjB,4BASJ,SAAC,KAAD,MAGL,C,mEC3GD,EAAyB,uB,SCiBzB,EAde,SAAC,GAAoC,IAAlCsB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYI,EAAe,EAAfA,SAClC,OACE,mBAAQL,KAAMA,EAAML,UAAWC,EAAeU,QAASL,EAAvD,SACGI,GAGN,C,yICRKE,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClB7B,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZ+B,EAAe,mCAAG,sGACNR,EAASO,IAAI,uBADP,uBACrB9B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfD,EAAe,mCAAG,WAAOiC,GAAP,8FAAWC,EAAX,+BAAqB,GAArB,SACNV,EAASO,IAAT,iBAAuBE,GAAvB,OAA4BC,IADtB,uBACrBjC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/movieDetails.module.scss?dd69","pages/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","shared/services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsWrapper\":\"movieDetails_detailsWrapper__02SDp\",\"filmData\":\"movieDetails_filmData__5NP6e\",\"img\":\"movieDetails_img__9j0J2\",\"addInfo\":\"movieDetails_addInfo__7YETN\",\"link\":\"movieDetails_link__Yro0x\"};","import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n  Outlet,\n} from 'react-router-dom';\n\nimport Spinner from '../../shared/components/Spinner/Spinner';\nimport { getMovieAddInfo } from '../../shared/services/movie-api';\nimport Button from '../../shared/components/Button/Button';\nimport styles from './movieDetails.module.scss';\n\n// Компонент\nconst MovieDetails = () => {\n  const [filmData, setFilmData] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // навігація\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const prevPage = location.state?.from || '/';\n\n  // go back\n  const toPrevPage = () => {\n    navigate(prevPage);\n  };\n\n  //  запит деталей фільму:\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getMovieAddInfo(movieId);\n\n        setFilmData(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // деталі фільму\n  const { title, poster_path, overview, genres, vote_average } = filmData;\n\n  const genresString = genres?.map(({ name }) => name).join(', ');\n\n  // РЕНДЕР\n  return (\n    <div className={`${styles.detailsWrapper}`}>\n      {isLoading && <Spinner />}\n      {error && <p>{error.massage}</p>}\n\n      <Button type=\"button\" onClickBtn={toPrevPage}>\n        Go back\n      </Button>\n      {filmData && (\n        <div className={`${styles.filmData}`}>\n          {poster_path && (\n            <img\n              className={`${styles.img}`}\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n          )}\n\n          <div>\n            <h2>{title}</h2>\n            <p>Rating: {vote_average}</p>\n\n            <h3>Description</h3>\n            <p>{overview}</p>\n\n            <h3>Genres</h3>\n            <p>{genresString}</p>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <h3>Additional Info:</h3>\n        <div className={`${styles.addInfo}`}>\n          <Link\n            className={`${styles.link}`}\n            to={`cast`}\n            state={{ from: prevPage }}\n          >\n            Cast\n          </Link>\n          <Link\n            className={`${styles.link}`}\n            to={`reviews`}\n            state={{ from: prevPage }}\n          >\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"button_Button__TGtNi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nconst Button = ({ type, onClickBtn, children }) => {\n  return (\n    <button type={type} className={styles.Button} onClick={onClickBtn}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  onClickBtn: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Button;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd80261a2a92a1b96bfd0993be732c39d',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getTrendsMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieAddInfo = async (id, addInfo = '') => {\n  const { data } = await instance.get(`/movie/${id}${addInfo}`);\n  return data;\n};\n"],"names":["useState","filmData","setFilmData","isLoading","setLoading","error","setError","movieId","useParams","location","useLocation","navigate","useNavigate","prevPage","state","from","useEffect","fetchPosts","getMovieAddInfo","data","message","title","poster_path","overview","genres","vote_average","genresString","map","name","join","className","styles","Spinner","massage","Button","type","onClickBtn","src","alt","to","children","onClick","instance","axios","baseURL","params","api_key","searchMovies","query","get","getTrendsMovies","id","addInfo"],"sourceRoot":""}